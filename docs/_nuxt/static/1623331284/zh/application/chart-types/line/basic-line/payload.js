__NUXT_JSONP__("/zh/application/chart-types/line/basic-line", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N){return {data:[{article:{slug:"basic-line",toc:[{id:s,depth:l,text:s},{id:t,depth:l,text:t},{id:u,depth:l,text:u},{id:v,depth:G,text:v},{id:w,depth:G,text:w},{id:x,depth:l,text:x},{id:y,depth:l,text:y}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:H},children:[{type:b,tag:e,props:{href:"#%E5%9F%BA%E7%A1%80%E6%8A%98%E7%BA%BF%E5%9B%BE",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"柱状图（或称条形图）是一种通过柱形的长度来表现数据大小的一种常用图表类型。"}]},{type:a,value:c},{type:b,tag:m,props:{id:s},children:[{type:b,tag:e,props:{href:"#%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%8A%98%E7%BA%BF%E5%9B%BE",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"如果我们想建立一个横坐标是类目型（category）、纵坐标是数值型（value）的折线图，我们可以使用这样的方式："}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{lang:q,layout:r},children:[{type:a,value:"option = {\n  xAxis: {\n    type: 'category',\n    data: ['A', 'B', 'C']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [120, 200, 150],\n      type: 'line'\n    }\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"在这个例子中，我们通过 "},{type:b,tag:d,props:{},children:[{type:a,value:D}]},{type:a,value:" 将横坐标设为类目型，并指定了对应的值；通过 "},{type:b,tag:d,props:{},children:[{type:a,value:E}]},{type:a,value:" 将 "},{type:b,tag:d,props:{},children:[{type:a,value:I}]},{type:a,value:" 的类型设定为数值型。在 "},{type:b,tag:d,props:{},children:[{type:a,value:J}]},{type:a,value:" 中，我们将系列类型设为 "},{type:b,tag:d,props:{},children:[{type:a,value:"line"}]},{type:a,value:"，并且通过 "},{type:b,tag:d,props:{},children:[{type:a,value:F}]},{type:a,value:" 指定了折线图三个点的取值。这样，就能得到一个最简单的折线图了。"}]},{type:a,value:c},{type:b,tag:K,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"这里 "},{type:b,tag:d,props:{},children:[{type:a,value:D}]},{type:a,value:" 和 "},{type:b,tag:d,props:{},children:[{type:a,value:I}]},{type:a,value:L},{type:b,tag:d,props:{},children:[{type:a,value:E}]},{type:a,value:" 属性都可以隐去不写。因为坐标轴的默认类型是数值型，而 "},{type:b,tag:d,props:{},children:[{type:a,value:D}]},{type:a,value:" 指定了类目型的 "},{type:b,tag:d,props:{},children:[{type:a,value:F}]},{type:a,value:"，所以 "},{type:b,tag:d,props:{},children:[{type:a,value:"ECharts"}]},{type:a,value:" 也能识别出这是类目型的坐标轴。为了让大家更容易理解，我们特意写了 "},{type:b,tag:d,props:{},children:[{type:a,value:E}]},{type:a,value:"。在实际的应用中，如果是 "},{type:b,tag:d,props:{},children:[{type:a,value:"'value'"}]},{type:a,value:" 类型，也可以省略不写。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{id:t},children:[{type:b,tag:e,props:{href:"#%E7%AC%9B%E5%8D%A1%E5%B0%94%E5%9D%90%E6%A0%87%E7%B3%BB%E4%B8%AD%E7%9A%84%E6%8A%98%E7%BA%BF%E5%9B%BE",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"如果我们希望折线图在横坐标和纵坐标上都是连续的，即在笛卡尔坐标系中，应该如何实现呢？答案也很简单，只要把 "},{type:b,tag:d,props:{},children:[{type:a,value:J}]},{type:a,value:L},{type:b,tag:d,props:{},children:[{type:a,value:F}]},{type:a,value:" 每个数据用一个包含两个元素的数组表示就行了。"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{lang:q,layout:r},children:[{type:a,value:"option = {\n  xAxis: {},\n  yAxis: {},\n  series: [\n    {\n      data: [\n        [20, 120],\n        [50, 200],\n        [40, 50]\n      ],\n      type: 'line'\n    }\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:m,props:{id:u},children:[{type:b,tag:e,props:{href:"#%E6%8A%98%E7%BA%BF%E5%9B%BE%E6%A0%B7%E5%BC%8F%E8%AE%BE%E7%BD%AE",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:M,props:{id:v},children:[{type:b,tag:e,props:{href:"#%E6%8A%98%E7%BA%BF%E7%9A%84%E6%A0%B7%E5%BC%8F",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"折线图中折线的样式可以通过 "},{type:b,tag:d,props:{},children:[{type:a,value:"lineStyle"}]},{type:a,value:" 设置。可以为其指定颜色、线宽、折线类型、阴影、不透明度等等，具体的可以参考配置项手册 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#series-line.lineStyle",rel:[z,A,B],target:C},children:[{type:b,tag:d,props:{},children:[{type:a,value:"series.lineStyle"}]}]},{type:a,value:" 了解。这里，我们以设置颜色（color）、线宽（width）和折线类型（type）为例说明。"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{lang:q,layout:r},children:[{type:a,value:"option = {\n  xAxis: {\n    data: ['A', 'B', 'C', 'D', 'E']\n  },\n  yAxis: {},\n  series: [\n    {\n      data: [10, 22, 28, 23, 19],\n      type: 'line',\n      lineStyle: {\n        normal: {\n          color: 'green',\n          width: 4,\n          type: 'dashed'\n        }\n      }\n    }\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"这里设置折线宽度时，数据点描边的宽度是不会跟着改变的，而应该在数据点的配置项中另外设置。"}]},{type:a,value:c},{type:b,tag:M,props:{id:w},children:[{type:b,tag:e,props:{href:"#%E6%95%B0%E6%8D%AE%E7%82%B9%E7%9A%84%E6%A0%B7%E5%BC%8F",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"数据点的样式可以通过 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#series-line.itemStyle",rel:[z,A,B],target:C},children:[{type:b,tag:d,props:{},children:[{type:a,value:"series.itemStyle"}]}]},{type:a,value:" 指定填充颜色（color）、描边颜色（borderColor）、描边宽度（borderWidth）、描边类型（borderType）、阴影（shadowColor）、不透明度（opacity）等。与折线样式的设置十分相似，这里不再展开说明。"}]},{type:a,value:c},{type:b,tag:m,props:{id:x},children:[{type:b,tag:e,props:{href:"#%E5%9C%A8%E6%95%B0%E6%8D%AE%E7%82%B9%E5%A4%84%E6%98%BE%E7%A4%BA%E6%95%B0%E5%80%BC",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"在系列中，这数据点的标签通过 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#series-line.label",rel:[z,A,B],target:C},children:[{type:b,tag:d,props:{},children:[{type:a,value:"series.label"}]}]},{type:a,value:" 属性指定。如果将 "},{type:b,tag:d,props:{},children:[{type:a,value:"label"}]},{type:a,value:" 下的 "},{type:b,tag:d,props:{},children:[{type:a,value:"show"}]},{type:a,value:" 指定为"},{type:b,tag:d,props:{},children:[{type:a,value:g}]},{type:a,value:"，则表示该数值默认时就显示；如果为 "},{type:b,tag:d,props:{},children:[{type:a,value:"false"}]},{type:a,value:"，而 "},{type:b,tag:e,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#series-line.emphasis.label.show",rel:[z,A,B],target:C},children:[{type:b,tag:d,props:{},children:[{type:a,value:"series.emphasis.label.show"}]}]},{type:a,value:" 为 "},{type:b,tag:d,props:{},children:[{type:a,value:g}]},{type:a,value:"，则表示只有在鼠标移动到该数据时，才显示数值。"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{lang:q,layout:r},children:[{type:a,value:"option = {\n  xAxis: {\n    data: ['A', 'B', 'C', 'D', 'E']\n  },\n  yAxis: {},\n  series: [\n    {\n      data: [10, 22, 28, 23, 19],\n      type: 'line',\n      label: {\n        show: true,\n        position: 'bottom',\n        textStyle: {\n          fontSize: 20\n        }\n      }\n    }\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:m,props:{id:y},children:[{type:b,tag:e,props:{href:"#%E7%A9%BA%E6%95%B0%E6%8D%AE",ariaHidden:g,tabIndex:h},children:[{type:b,tag:i,props:{className:[j,k]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"在一个系列中，可能一个横坐标对应的取值是“空”的，将其设为 0 有时并不能满足我们的期望--空数据不应被其左右的数据连接。"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"在 ECharts 中，我们使用字符串 "},{type:b,tag:d,props:{},children:[{type:a,value:"'-'"}]},{type:a,value:" 表示空数据，这对其他系列的数据也是适用的。"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{lang:q,layout:r},children:[{type:a,value:"option = {\n  xAxis: {\n    data: ['A', 'B', 'C', 'D', 'E']\n  },\n  yAxis: {},\n  series: [\n    {\n      data: [0, 22, '-', 23, 19],\n      type: 'line'\n    }\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:K,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"注意区别这个例子中，“空”数据与取值为 0 的数据。"}]},{type:a,value:c}]}]},dir:"\u002Fzh\u002Fapplication\u002Fchart-types\u002Fline",path:"\u002Fzh\u002Fapplication\u002Fchart-types\u002Fline\u002Fbasic-line",extension:".md",createdAt:N,updatedAt:N},postPath:"zh\u002Fapplication\u002Fchart-types\u002Fline\u002Fbasic-line"}],fetch:{},mutations:[]}}("text","element","\n","code","a","p","true",-1,"span","icon","icon-link",2,"h2","div","nuxt-content-highlight","md-live","js","tb","最简单的折线图","笛卡尔坐标系中的折线图","折线图样式设置","折线的样式","数据点的样式","在数据点处显示数值","空数据","nofollow","noopener","noreferrer","_blank","xAxis","type","data",3,"基础折线图","yAxis","series","blockquote"," 的 ","h3","2021-06-10T13:19:59.312Z")));
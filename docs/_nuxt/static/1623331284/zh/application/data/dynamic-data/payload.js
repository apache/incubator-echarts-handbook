__NUXT_JSONP__("/zh/application/data/dynamic-data", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B){return {data:[{article:{slug:"dynamic-data",toc:[{id:h,depth:p,text:h},{id:x,depth:p,text:y},{id:i,depth:p,text:i}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:z},children:[{type:b,tag:e,props:{href:"#%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8A%A0%E8%BD%BD%E4%B8%8E%E5%8A%A8%E6%80%81%E6%9B%B4%E6%96%B0",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:q,props:{id:h},children:[{type:b,tag:e,props:{href:"#%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:h}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"~getting-started"},children:[{type:a,value:"入门示例"}]},{type:a,value:"中的数据是在初始化后"},{type:b,tag:f,props:{},children:[{type:a,value:o}]},{type:a,value:"中直接填入的，但是很多时候可能数据需要异步加载后再填入。"},{type:b,tag:f,props:{},children:[{type:a,value:"ECharts"}]},{type:a,value:" 中实现异步数据的更新非常简单，在图表初始化后不管任何时候只要通过 jQuery 等工具异步获取数据后通过 "},{type:b,tag:f,props:{},children:[{type:a,value:o}]},{type:a,value:" 填入数据和配置项就行。"}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{lang:u,"line-highlights":g,"file-name":g},children:[{type:a,value:"var myChart = echarts.init(document.getElementById('main'));\n\n$.get('data.json').done(function(data) {\n  \u002F\u002F data 的结构:\n  \u002F\u002F {\n  \u002F\u002F     categories: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"],\n  \u002F\u002F     values: [5, 20, 36, 10, 10, 20]\n  \u002F\u002F }\n  myChart.setOption({\n    title: {\n      text: '异步数据加载示例'\n    },\n    tooltip: {},\n    legend: {},\n    xAxis: {\n      data: data.categories\n    },\n    yAxis: {},\n    series: [\n      {\n        name: '销量',\n        type: 'bar',\n        data: data.values\n      }\n    ]\n  });\n});\n"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"或者先设置完其它的样式，显示一个空的直角坐标轴，然后获取数据后填入数据。"}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{lang:u,"line-highlights":g,"file-name":g},children:[{type:a,value:"var myChart = echarts.init(document.getElementById('main'));\n\u002F\u002F 显示标题，图例和空的坐标轴\nmyChart.setOption({\n  title: {\n    text: '异步数据加载示例'\n  },\n  tooltip: {},\n  legend: {\n    data: ['销量']\n  },\n  xAxis: {\n    data: []\n  },\n  yAxis: {},\n  series: [\n    {\n      name: '销量',\n      type: 'bar',\n      data: []\n    }\n  ]\n});\n\n\u002F\u002F 异步加载数据\n$.get('data.json').done(function(data) {\n  \u002F\u002F 填入数据\n  myChart.setOption({\n    xAxis: {\n      data: data.categories\n    },\n    series: [\n      {\n        \u002F\u002F 根据名字对应到相应的系列\n        name: '销量',\n        data: data.data\n      }\n    ]\n  });\n});\n"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如下："}]},{type:a,value:c},{type:b,tag:v,props:{src:"doc-example\u002Ftutorial-async&edit=1"},children:[{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ECharts 中在更新数据的时候需要通过"},{type:b,tag:f,props:{},children:[{type:a,value:w}]},{type:a,value:"属性对应到相应的系列，上面示例中如果"},{type:b,tag:f,props:{},children:[{type:a,value:w}]},{type:a,value:"不存在也可以根据系列的顺序正常更新，但是更多时候推荐更新数据的时候加上系列的"},{type:b,tag:f,props:{},children:[{type:a,value:w}]},{type:a,value:"数据。"}]},{type:a,value:c},{type:b,tag:q,props:{id:x},children:[{type:b,tag:e,props:{href:"#loading-%E5%8A%A8%E7%94%BB",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果数据加载时间较长，一个空的坐标轴放在画布上也会让用户觉得是不是产生 bug 了，因此需要一个 loading 的动画来提示用户数据正在加载。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ECharts 默认有提供了一个简单的加载动画。只需要调用 "},{type:b,tag:e,props:{href:"api.html#echartsInstance.showLoading"},children:[{type:a,value:"showLoading"}]},{type:a,value:" 方法显示。数据加载完成后再调用 "},{type:b,tag:e,props:{href:"api.html#echartsInstance.hideLoading"},children:[{type:a,value:"hideLoading"}]},{type:a,value:" 方法隐藏加载动画。"}]},{type:a,value:c},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{lang:u,"line-highlights":g,"file-name":g},children:[{type:a,value:"myChart.showLoading();\n$.get('data.json').done(function (data) {\n    myChart.hideLoading();\n    myChart.setOption(...);\n});\n"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"效果如下："}]},{type:a,value:c},{type:b,tag:v,props:{src:"doc-example\u002Ftutorial-loading&edit=1"},children:[{type:a,value:c}]},{type:a,value:c},{type:b,tag:q,props:{id:i},children:[{type:b,tag:e,props:{href:"#%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8A%A8%E6%80%81%E6%9B%B4%E6%96%B0",ariaHidden:j,tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:i}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ECharts 由数据驱动，数据的改变驱动图表展现的改变，因此动态数据的实现也变得异常简单。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"所有数据的更新都通过 "},{type:b,tag:e,props:{href:A},children:[{type:a,value:o}]},{type:a,value:"实现，你只需要定时获取数据，"},{type:b,tag:e,props:{href:A},children:[{type:a,value:o}]},{type:a,value:" 填入数据，而不用考虑数据到底产生了那些变化，ECharts 会找到两组数据之间的差异然后通过合适的动画去表现数据的变化。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"具体可以看下面示例："}]},{type:a,value:c},{type:b,tag:v,props:{src:"doc-example\u002Ftutorial-dynamic-data&edit=1"},children:[{type:a,value:c}]}]},dir:"\u002Fzh\u002Fapplication\u002Fdata",path:"\u002Fzh\u002Fapplication\u002Fdata\u002Fdynamic-data",extension:".md",createdAt:B,updatedAt:B},postPath:"zh\u002Fapplication\u002Fdata\u002Fdynamic-data"}],fetch:{},mutations:[]}}("text","element","\n","p","a","code","","异步加载","数据的动态更新","true",-1,"span","icon","icon-link","setOption",2,"h2","div","nuxt-content-highlight","md-code-block","js","md-example","name","loading-动画","loading 动画","异步数据的加载与动态更新","~api.html#echartsInstance.setOption","2021-06-10T13:19:59.312Z")));